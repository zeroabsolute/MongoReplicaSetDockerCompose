version: "3"
services:
  # Temporary container which sets up replica set
  mongo-setup:
    container_name: mongo-setup
    image: mongo
    restart: on-failure
    networks:
      default:
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/setup.sh" ]
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  # Three mongodb instances
  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    networks:
      - default
    ports:
      - "27018:27018"
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--port",
        "27018"
      ]
    volumes:
      - ./data/mongo/data1/db:/data/db
      - ./data/mongo/data1/configdb:/data/configdb
  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    networks:
      - default
    ports:
      - "27019:27019"
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--port",
        "27019"
      ]
    volumes:
      - ./data/mongo/data2/db:/data/db
      - ./data/mongo/data2/configdb:/data/configdb
  mongo3:
    hostname: mongo3
    container_name: mongo3
    image: mongo
    networks:
      - default
    ports:
      - "27020:27020"
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--port",
        "27020"
      ]
    volumes:
      - ./data/mongo/data3/db:/data/db
      - ./data/mongo/data3/configdb:/data/configdb

  # Node.js Express api to test the configuration
  api:
    container_name: api
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    ports:
      - "5000:5000"
    build:
      dockerfile: Dockerfile
      context: ./node_api
    restart: on-failure
    volumes:
      - /app/node_modules
      - ./node_api:/app

networks:
  default:
    driver: bridge
